<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/jee
http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	    <property name="ignoreResourceNotFound" value="true" />
	    <property name="locations">
	        <list>
	            <value>classpath*:/application.properties</value>
	        </list>
	    </property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.pw}" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="select 1" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.unistrong.tracker.model</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />

			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />

			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />

			<tx:method name="get*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config expose-proxy="true">
		<aop:pointcut expression="execution(* com.unistrong..*Service.*(..))"
			id="managedServiceOperation" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="managedServiceOperation" />
	</aop:config>

	<context:component-scan
		base-package="com.unistrong.tracker.service,com.unistrong.tracker.dao,com.unistrong.tracker.handle.manage">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean id="memCachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
		<!-- 包括由空格或逗号分隔的主机或IP地址与端口号 -->
		<property name="servers" value="${mem.ip}:${mem.port}" />
		<!-- 指定要使用的协议(BINARY,TEXT),默认是TEXT -->
		<property name="protocol" value="BINARY" />
		<!-- 设置默认的转码器(默认以net.spy.memcached.transcoders.SerializingTranscoder) -->
		<property name="transcoder">
			<bean class="net.spy.memcached.transcoders.SerializingTranscoder">
				<property name="compressionThreshold" value="1024" />
			</bean>
		</property>
		<!-- 以毫秒为单位设置默认的操作超时时间 -->
		<property name="opTimeout" value="1000" />
		<!-- 连续超时次数阈值 -->
		<property name="timeoutExceptionThreshold" value="1998" />
		<!-- 设置定位器类型(ARRAY_MOD,CONSISTENT),默认是ARRAY_MOD -->
		<property name="locatorType" value="CONSISTENT" />
		<!-- 设置故障模式(取消，重新分配，重试)，默认是重新分配 -->
		<property name="failureMode" value="Redistribute" />
		<!-- 如果你想使用Nagle算法，设置为true -->
		<property name="useNagleAlgorithm" value="false" />
	</bean>

	<bean id="mailConf" class="com.unistrong.tracker.handle.manage.MailConf">
        <!-- http://car.capcare.com.cn/resetPwd.shtml -->
        <!-- http://localhost:8085/api/_html/user/userPwd.html -->
		<property name="url" value="http://car.capcare.com.cn/resetPwd.shtml" />
		<property name="from" value="capcare@163.com" />
		<!-- 暂放 c:/capcare/upload/ /opt/capcare/upload/ -->
		<property name="icon" value="${icon.file}" />
	</bean>

    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.163.com" />
        <property name="port" value="465" />
		<!-- capcare/capcare2013 capcare_vip/capcare -->
        <property name="username" value="capcare" />
        <property name="password" value="capcare2013" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.timeout">30000</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
            </props>
        </property>
    </bean>

</beans>